"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.either = either;
exports.either3 = either3;
exports.either4 = either4;
exports.either5 = either5;
exports.either6 = either6;
exports.either7 = either7;
exports.either8 = either8;
exports.either9 = either9;
exports.oneOf = oneOf;

var _debrief = require("debrief");

var _Result = require("lemons/Result");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * Indents and adds a dash in front of this (potentially multiline) string.
 */
// istanbul ignore next
function itemize() {
  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return '-' + (0, _debrief.indent)(s).substring(1);
}

function either(d1, d2) {
  return function (blob) {
    return d1(blob).dispatch(function (value1) {
      return (0, _Result.Ok)(value1);
    }, function (err1) {
      return d2(blob).dispatch(function (value2) {
        return (0, _Result.Ok)(value2);
      }, function (err2) {
        return (0, _Result.Err)((0, _debrief.annotate)(blob, ['Either:', itemize((0, _debrief.summarize)(err1).join('\n')), itemize((0, _debrief.summarize)(err2).join('\n'))].join('\n')));
      });
    });
  };
}

function either3(d1, d2, d3) {
  return either(d1, either(d2, d3));
}

function either4(d1, d2, d3, d4) {
  return either(d1, either3(d2, d3, d4));
}

function either5(d1, d2, d3, d4, d5) {
  return either(d1, either4(d2, d3, d4, d5));
}

function either6(d1, d2, d3, d4, d5, d6) {
  return either(d1, either5(d2, d3, d4, d5, d6));
}

function either7(d1, d2, d3, d4, d5, d6, d7) {
  return either(d1, either6(d2, d3, d4, d5, d6, d7));
}

function either8(d1, d2, d3, d4, d5, d6, d7, d8) {
  return either(d1, either7(d2, d3, d4, d5, d6, d7, d8));
}

function either9(d1, d2, d3, d4, d5, d6, d7, d8, d9) {
  return either(d1, either8(d2, d3, d4, d5, d6, d7, d8, d9));
}

function oneOf(constants) {
  return function (blob) {
    var _iterator = _createForOfIteratorHelper(constants),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var c = _step.value;

        if (c === blob) {
          return (0, _Result.Ok)(c);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return (0, _Result.Err)((0, _debrief.annotate)(blob, "Must be one of ".concat(constants.map(function (value) {
      return JSON.stringify(value);
    }).join(', '))));
  };
}